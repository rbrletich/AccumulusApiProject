start cypress-mochawesome-reporter 3.2.3
cwd: /Users/Richard/AccumulusApiAutomationProject
cypress.json: {"reporter":"cypress-mochawesome-reporter","video":false,"reporterOptions":{"charts":true,"reportPageTitle":"Accumulus API Project","embeddedScreenshots":true,"inlineAssets":true,"debug":true,"reportDir":"/Users/Richard/AccumulusApiAutomationProject/cypress/reports/html"},"projectId":"jnp8cq","setupNodeEvents":"[Function setupNodeEvents]","baseUrl":"https://637d2c3e9c2635df8f833d30.mockapi.io","projectRoot":"/Users/Richard/AccumulusApiAutomationProject","projectName":"AccumulusApiAutomationProject","repoRoot":"/Users/Richard/AccumulusApiAutomationProject","rawJson":{"reporter":"cypress-mochawesome-reporter","video":false,"reporterOptions":{"charts":true,"reportPageTitle":"Accumulus API Project","embeddedScreenshots":true,"inlineAssets":true,"debug":true},"projectId":"jnp8cq","e2e":{"setupNodeEvents":"[Function setupNodeEvents]","baseUrl":"https://637d2c3e9c2635df8f833d30.mockapi.io"},"setupNodeEvents":"[Function setupNodeEvents]","baseUrl":"https://637d2c3e9c2635df8f833d30.mockapi.io","envFile":{},"projectRoot":"/Users/Richard/AccumulusApiAutomationProject","projectName":"AccumulusApiAutomationProject","repoRoot":"/Users/Richard/AccumulusApiAutomationProject"},"configFile":"cypress.config.js","morgan":false,"isTextTerminal":true,"socketId":"nt4tte8g7b","report":true,"animationDistanceThreshold":5,"arch":"arm64","blockHosts":null,"chromeWebSecurity":true,"clientCertificates":[],"defaultCommandTimeout":4000,"downloadsFolder":"/Users/Richard/AccumulusApiAutomationProject/cypress/downloads","env":{},"execTimeout":60000,"experimentalFetchPolyfill":false,"experimentalInteractiveRunEvents":false,"experimentalRunAllSpecs":false,"experimentalSessionAndOrigin":false,"experimentalModifyObstructiveThirdPartyCode":false,"experimentalSourceRewriting":false,"experimentalSingleTabRunMode":false,"experimentalStudio":false,"experimentalWebKitSupport":false,"fileServerFolder":"/Users/Richard/AccumulusApiAutomationProject","fixturesFolder":"/Users/Richard/AccumulusApiAutomationProject/cypress/fixtures","excludeSpecPattern":"*.hot-update.js","includeShadowDom":false,"keystrokeDelay":0,"modifyObstructiveCode":true,"numTestsKeptInMemory":0,"platform":"darwin","pageLoadTimeout":60000,"port":49853,"redirectionLimit":20,"requestTimeout":5000,"resolvedNodePath":"/usr/local/bin/node","resolvedNodeVersion":"18.12.1","responseTimeout":30000,"retries":{"runMode":0,"openMode":0},"screenshotOnRunFailure":true,"screenshotsFolder":"/Users/Richard/AccumulusApiAutomationProject/cypress/screenshots","slowTestThreshold":10000,"scrollBehavior":"top","supportFile":"/Users/Richard/AccumulusApiAutomationProject/cypress/support/e2e.js","supportFolder":"/Users/Richard/AccumulusApiAutomationProject/cypress/support","taskTimeout":60000,"testIsolation":null,"trashAssetsBeforeRuns":true,"userAgent":null,"videoCompression":32,"videosFolder":"/Users/Richard/AccumulusApiAutomationProject/cypress/videos","videoUploadOnPasses":true,"viewportHeight":660,"viewportWidth":1000,"waitForAnimations":true,"watchForFileChanges":false,"specPattern":"cypress/e2e/**/*.cy.{js,jsx,ts,tsx}","additionalIgnorePattern":[],"autoOpen":false,"browsers":[{"name":"chrome","family":"chromium","channel":"stable","displayName":"Chrome","version":"107.0.5304.110","path":"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome","minSupportedVersion":64,"majorVersion":"107"},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"106.0.5249.51","path":"","majorVersion":106}],"clientRoute":"/__/","cypressBinaryRoot":"/Users/Richard/Library/Caches/Cypress/11.2.0/Cypress.app/Contents/Resources/app","devServerPublicPathRoute":"/__cypress/src","hosts":null,"isInteractive":true,"namespace":"__cypress","reporterRoute":"/__cypress/reporter","socketIoCookie":"__socket","socketIoRoute":"/__socket","version":"11.2.0","xhrRoute":"/xhrs/","cypressEnv":"production","resolved":{"animationDistanceThreshold":{"value":5,"from":"default"},"arch":{"value":"arm64","from":"default"},"baseUrl":{"value":"https://637d2c3e9c2635df8f833d30.mockapi.io","from":"config"},"blockHosts":{"value":null,"from":"default"},"chromeWebSecurity":{"value":true,"from":"default"},"clientCertificates":{"value":[],"from":"default"},"defaultCommandTimeout":{"value":4000,"from":"default"},"downloadsFolder":{"value":"cypress/downloads","from":"default"},"env":{},"execTimeout":{"value":60000,"from":"default"},"experimentalFetchPolyfill":{"value":false,"from":"default"},"experimentalInteractiveRunEvents":{"value":false,"from":"default"},"experimentalRunAllSpecs":{"value":false,"from":"default"},"experimentalSessionAndOrigin":{"value":false,"from":"default"},"experimentalModifyObstructiveThirdPartyCode":{"value":false,"from":"default"},"experimentalSourceRewriting":{"value":false,"from":"default"},"experimentalSingleTabRunMode":{"value":false,"from":"default"},"experimentalStudio":{"value":false,"from":"default"},"experimentalWebKitSupport":{"value":false,"from":"default"},"fileServerFolder":{"value":"","from":"default"},"fixturesFolder":{"value":"cypress/fixtures","from":"default"},"excludeSpecPattern":{"value":"*.hot-update.js","from":"default"},"includeShadowDom":{"value":false,"from":"default"},"keystrokeDelay":{"value":0,"from":"default"},"modifyObstructiveCode":{"value":true,"from":"default"},"nodeVersion":{"from":"default"},"numTestsKeptInMemory":{"value":0,"from":"config"},"platform":{"value":"darwin","from":"default"},"pageLoadTimeout":{"value":60000,"from":"default"},"port":{"value":null,"from":"default"},"projectId":{"value":"jnp8cq","from":"config"},"redirectionLimit":{"value":20,"from":"default"},"reporter":{"value":"cypress-mochawesome-reporter","from":"config"},"reporterOptions":{"value":{"charts":true,"reportPageTitle":"Accumulus API Project","embeddedScreenshots":true,"inlineAssets":true,"debug":true},"from":"config"},"requestTimeout":{"value":5000,"from":"default"},"resolvedNodePath":{"value":null,"from":"default"},"resolvedNodeVersion":{"value":null,"from":"default"},"responseTimeout":{"value":30000,"from":"default"},"retries":{"value":{"runMode":0,"openMode":0},"from":"default"},"screenshotOnRunFailure":{"value":true,"from":"default"},"screenshotsFolder":{"value":"cypress/screenshots","from":"default"},"slowTestThreshold":{"value":10000,"from":"default"},"scrollBehavior":{"value":"top","from":"default"},"supportFile":{"value":"cypress/support/e2e.{js,jsx,ts,tsx}","from":"default"},"supportFolder":{"value":false,"from":"default"},"taskTimeout":{"value":60000,"from":"default"},"testIsolation":{"value":null,"from":"default"},"trashAssetsBeforeRuns":{"value":true,"from":"default"},"userAgent":{"value":null,"from":"default"},"video":{"value":false,"from":"config"},"videoCompression":{"value":32,"from":"default"},"videosFolder":{"value":"cypress/videos","from":"default"},"videoUploadOnPasses":{"value":true,"from":"default"},"viewportHeight":{"value":660,"from":"default"},"viewportWidth":{"value":1000,"from":"default"},"waitForAnimations":{"value":true,"from":"default"},"watchForFileChanges":{"value":false,"from":"config"},"specPattern":{"value":"cypress/e2e/**/*.cy.{js,jsx,ts,tsx}","from":"default"},"browsers":{"value":[{"name":"chrome","family":"chromium","channel":"stable","displayName":"Chrome","version":"107.0.5304.110","path":"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome","minSupportedVersion":64,"majorVersion":"107"},{"name":"electron","channel":"stable","family":"chromium","displayName":"Electron","version":"106.0.5249.51","path":"","majorVersion":106,"isHeadless":true,"isHeaded":false}],"from":"runtime"},"hosts":{"value":null,"from":"default"},"isInteractive":{"value":true,"from":"default"}},"testingType":"e2e","remote":{"origin":"https://637d2c3e9c2635df8f833d30.mockapi.io","strategy":"http","fileServer":null,"domainName":"mockapi.io","props":{"port":"443","protocol":"https:","subdomain":"637d2c3e9c2635df8f833d30","domain":"mockapi","tld":"io"}},"browser":null,"specs":[],"proxyUrl":"http://localhost:49853","browserUrl":"https://637d2c3e9c2635df8f833d30.mockapi.io/__/","reporterUrl":"https://637d2c3e9c2635df8f833d30.mockapi.io/__cypress/reporter","xhrUrl":"__cypress/xhrs/","proxyServer":"http://localhost:49853","state":{}}
simple config: {"jsonDir":"/Users/Richard/AccumulusApiAutomationProject/cypress/reports/html/.jsons","reporterOptions":{"charts":true,"reportPageTitle":"Accumulus API Project","embeddedScreenshots":true,"inlineAssets":true,"debug":true,"reportDir":"/Users/Richard/AccumulusApiAutomationProject/cypress/reports/html"},"screenshotsDir":"/Users/Richard/AccumulusApiAutomationProject/cypress/screenshots","outputDir":"/Users/Richard/AccumulusApiAutomationProject/cypress/reports/html"}
Remove output folder /Users/Richard/AccumulusApiAutomationProject/cypress/reports/html
Start generate report process
Read and merge jsons from "/Users/Richard/AccumulusApiAutomationProject/cypress/reports/html/.jsons"
report before enhance: {"stats":{"suites":1,"tests":5,"passes":5,"pending":0,"failures":0,"start":"2022-11-26T05:49:52.656Z","end":"2022-11-26T05:49:53.234Z","duration":565,"testsRegistered":5,"passPercent":100,"pendingPercent":0,"other":0,"hasOther":false,"skipped":0,"hasSkipped":false},"results":[{"uuid":"96919f17-ee48-4f39-8e5f-8eb70faa46ef","title":"","fullFile":"cypress/e2e/ToDoAPI.cy.js","file":"cypress/e2e/ToDoAPI.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"c8a2ce2a-1285-4ce4-ab7a-e867eed99336","title":"These tests are used to validate the todos API is functioning as intended","fullFile":"","file":"","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Makes a get call to the todo API and provides parameter 'id'  then verifies the result","fullTitle":"These tests are used to validate the todos API is functioning as intended Makes a get call to the todo API and provides parameter 'id'  then verifies the result","timedOut":null,"duration":148,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const expectedResponse = _ApiTestData.default.idSearchResults;\nconst parameters = {\n  id: 1\n};\n_ApiHelper.default.makeGetCall('/todos', parameters).then(({\n  status,\n  body\n}) => {\n  _ApiHelper.default.makeTodoGetAssertions(status, body, expectedResponse);\n});","err":{},"uuid":"576843b0-a7da-4d30-9681-58666f148816","parentUUID":"c8a2ce2a-1285-4ce4-ab7a-e867eed99336","isHook":false,"skipped":false},{"title":"Makes a call to the todo API and provides parameter 'completed', then verifies the result","fullTitle":"These tests are used to validate the todos API is functioning as intended Makes a call to the todo API and provides parameter 'completed', then verifies the result","timedOut":null,"duration":46,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const expectedResponse = _ApiTestData.default.completedSearchResults;\nconst parameters = {\n  completed: true\n};\n_ApiHelper.default.makeGetCall('/todos', parameters).then(({\n  status,\n  body\n}) => {\n  _ApiHelper.default.makeTodoGetAssertions(status, body, expectedResponse);\n});","err":{},"uuid":"830e97ba-def7-44c5-a289-9ff028d4e229","parentUUID":"c8a2ce2a-1285-4ce4-ab7a-e867eed99336","isHook":false,"skipped":false},{"title":"Makes a post call to create a todo record. Then, makes a get call with 'id' parameter and validates the correct data is returned","fullTitle":"These tests are used to validate the todos API is functioning as intended Makes a post call to create a todo record. Then, makes a get call with 'id' parameter and validates the correct data is returned","timedOut":null,"duration":131,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const createTodoBody = _ApiTestData.default.createTodoBody;\nlet options = {\n  body: createTodoBody\n}; // Makes a put call to create a data entry with known data.\n_ApiHelper.default.makePostCall('/todos', options.body).then(({\n  status,\n  body\n}) => {\n  const parameters = {\n    id: body.id\n  }; // Creates a hash for the id parameter that will be used in the next get call\n  options = {\n    url: '/todos',\n    parameters\n  };\n}).then(({\n  status,\n  body\n}) => {\n  _ApiHelper.default.makeGetCall('/todos', options.parameters).then(({\n    status,\n    body\n  }) => {\n    _ApiHelper.default.makeTodoGetAssertions(status, body, [createTodoBody]);\n  });\n  options = {\n    id: body.id\n  };\n}).then(() => {\n  _ApiHelper.default.makeDeleteCall('/todos', options.id).then(({\n    status\n  }) => {\n    _ApiHelper.default.makeStatusAssertion(status, 200);\n  });\n});","err":{},"uuid":"5174b76b-3256-4e4f-8db0-50c0a4c20b8f","parentUUID":"c8a2ce2a-1285-4ce4-ab7a-e867eed99336","isHook":false,"skipped":false},{"title":"Makes a post call to create a todo record. Then, makes a get call with 'userName' parameter and validates the correct data is returned","fullTitle":"These tests are used to validate the todos API is functioning as intended Makes a post call to create a todo record. Then, makes a get call with 'userName' parameter and validates the correct data is returned","timedOut":null,"duration":119,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const createTodoBody = _ApiTestData.default.createTodoBody;\nlet options = {\n  body: createTodoBody\n}; // Makes a put call to create a data entry with known data.\n_ApiHelper.default.makePostCall('/todos', options.body).then(({\n  status,\n  body\n}) => {\n  const parameters = {\n    userName: createTodoBody.userName\n  }; // Creates a hash for the userName parameter that will be used in the next get call\n  options = {\n    url: '/todos',\n    parameters\n  };\n}).then(({\n  status,\n  body\n}) => {\n  _ApiHelper.default.makeGetCall('/todos', options.parameters).then(({\n    status,\n    body\n  }) => {\n    _ApiHelper.default.makeTodoGetAssertions(status, body, [createTodoBody]);\n  });\n  const id = body.id; // Getting the created Todo id value to perform a get call\n  options = {\n    id\n  };\n}).then(() => {\n  _ApiHelper.default.makeDeleteCall('/todos', options.id).then(({\n    status\n  }) => {\n    _ApiHelper.default.makeStatusAssertion(status, 200);\n  });\n});","err":{},"uuid":"d6e1dbc7-8173-44f6-b631-0b744cccdef7","parentUUID":"c8a2ce2a-1285-4ce4-ab7a-e867eed99336","isHook":false,"skipped":false},{"title":"Makes a post call to create a todo record. Then, makes a get call with 'userId' parameter and validates the correct data is returned","fullTitle":"These tests are used to validate the todos API is functioning as intended Makes a post call to create a todo record. Then, makes a get call with 'userId' parameter and validates the correct data is returned","timedOut":null,"duration":121,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const createTodoBody = _ApiTestData.default.createTodoBody;\nlet options = {\n  body: createTodoBody\n}; // Makes a put call to create a data entry with known data.\n_ApiHelper.default.makePostCall('/todos', options.body).then(({\n  status,\n  body\n}) => {\n  const parameters = {\n    userId: createTodoBody.userId\n  }; // Creates a hash for the userId parameter that will be used in the next get call\n  options = {\n    url: '/todos',\n    parameters\n  };\n}).then(({\n  status,\n  body\n}) => {\n  _ApiHelper.default.makeGetCall('/todos', options.parameters).then(({\n    status,\n    body\n  }) => {\n    _ApiHelper.default.makeTodoGetAssertions(status, body, [createTodoBody]);\n  });\n  const id = body.id; // Getting the created Todo id value to perform a get call\n  options = {\n    id\n  };\n}).then(() => {\n  _ApiHelper.default.makeDeleteCall('/todos', options.id).then(({\n    status\n  }) => {\n    _ApiHelper.default.makeStatusAssertion(status, 200);\n  });\n});","err":{},"uuid":"922ec0ea-35ad-431b-bf31-8ae763170ef1","parentUUID":"c8a2ce2a-1285-4ce4-ab7a-e867eed99336","isHook":false,"skipped":false}],"suites":[],"passes":["576843b0-a7da-4d30-9681-58666f148816","830e97ba-def7-44c5-a289-9ff028d4e229","5174b76b-3256-4e4f-8db0-50c0a4c20b8f","d6e1dbc7-8173-44f6-b631-0b744cccdef7","922ec0ea-35ad-431b-bf31-8ae763170ef1"],"failures":[],"pending":[],"skipped":[],"duration":565,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000}],"meta":{"mocha":{"version":"7.0.1"},"mochawesome":{"options":{"quiet":false,"reportFilename":"mochawesome","saveHtml":false,"saveJson":true,"consoleReporter":"spec","useInlineDiffs":false,"code":true},"version":"7.1.3"},"marge":{"options":{"charts":true,"reportPageTitle":"Accumulus API Project","embeddedScreenshots":true,"inlineAssets":true,"debug":true,"overwrite":false,"html":false,"json":true,"reportDir":"cypress/reports/html/.jsons"},"version":"6.2.0"}}}
Enhance report
attach screenshots for test "These tests are used to validate the todos API is functioning as intended Makes a get call to the todo API and provides parameter 'id'  then verifies the result"
no context
attach screenshots for test "These tests are used to validate the todos API is functioning as intended Makes a call to the todo API and provides parameter 'completed', then verifies the result"
no context
attach screenshots for test "These tests are used to validate the todos API is functioning as intended Makes a post call to create a todo record. Then, makes a get call with 'id' parameter and validates the correct data is returned"
no context
attach screenshots for test "These tests are used to validate the todos API is functioning as intended Makes a post call to create a todo record. Then, makes a get call with 'userName' parameter and validates the correct data is returned"
no context
attach screenshots for test "These tests are used to validate the todos API is functioning as intended Makes a post call to create a todo record. Then, makes a get call with 'userId' parameter and validates the correct data is returned"
no context
report after enhance: {"stats":{"suites":1,"tests":5,"passes":5,"pending":0,"failures":0,"start":"2022-11-26T05:49:52.656Z","end":"2022-11-26T05:49:53.234Z","duration":565,"testsRegistered":5,"passPercent":100,"pendingPercent":0,"other":0,"hasOther":false,"skipped":0,"hasSkipped":false},"results":[{"uuid":"96919f17-ee48-4f39-8e5f-8eb70faa46ef","title":"","fullFile":"cypress/e2e/ToDoAPI.cy.js","file":"cypress/e2e/ToDoAPI.cy.js","beforeHooks":[],"afterHooks":[],"tests":[],"suites":[{"uuid":"c8a2ce2a-1285-4ce4-ab7a-e867eed99336","title":"These tests are used to validate the todos API is functioning as intended","fullFile":"cypress/e2e/ToDoAPI.cy.js","file":"cypress/e2e/ToDoAPI.cy.js","beforeHooks":[],"afterHooks":[],"tests":[{"title":"Makes a get call to the todo API and provides parameter 'id'  then verifies the result","fullTitle":"These tests are used to validate the todos API is functioning as intended Makes a get call to the todo API and provides parameter 'id'  then verifies the result","timedOut":null,"duration":148,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const expectedResponse = _ApiTestData.default.idSearchResults;\nconst parameters = {\n  id: 1\n};\n_ApiHelper.default.makeGetCall('/todos', parameters).then(({\n  status,\n  body\n}) => {\n  _ApiHelper.default.makeTodoGetAssertions(status, body, expectedResponse);\n});","err":{},"uuid":"576843b0-a7da-4d30-9681-58666f148816","parentUUID":"c8a2ce2a-1285-4ce4-ab7a-e867eed99336","isHook":false,"skipped":false},{"title":"Makes a call to the todo API and provides parameter 'completed', then verifies the result","fullTitle":"These tests are used to validate the todos API is functioning as intended Makes a call to the todo API and provides parameter 'completed', then verifies the result","timedOut":null,"duration":46,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const expectedResponse = _ApiTestData.default.completedSearchResults;\nconst parameters = {\n  completed: true\n};\n_ApiHelper.default.makeGetCall('/todos', parameters).then(({\n  status,\n  body\n}) => {\n  _ApiHelper.default.makeTodoGetAssertions(status, body, expectedResponse);\n});","err":{},"uuid":"830e97ba-def7-44c5-a289-9ff028d4e229","parentUUID":"c8a2ce2a-1285-4ce4-ab7a-e867eed99336","isHook":false,"skipped":false},{"title":"Makes a post call to create a todo record. Then, makes a get call with 'id' parameter and validates the correct data is returned","fullTitle":"These tests are used to validate the todos API is functioning as intended Makes a post call to create a todo record. Then, makes a get call with 'id' parameter and validates the correct data is returned","timedOut":null,"duration":131,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const createTodoBody = _ApiTestData.default.createTodoBody;\nlet options = {\n  body: createTodoBody\n}; // Makes a put call to create a data entry with known data.\n_ApiHelper.default.makePostCall('/todos', options.body).then(({\n  status,\n  body\n}) => {\n  const parameters = {\n    id: body.id\n  }; // Creates a hash for the id parameter that will be used in the next get call\n  options = {\n    url: '/todos',\n    parameters\n  };\n}).then(({\n  status,\n  body\n}) => {\n  _ApiHelper.default.makeGetCall('/todos', options.parameters).then(({\n    status,\n    body\n  }) => {\n    _ApiHelper.default.makeTodoGetAssertions(status, body, [createTodoBody]);\n  });\n  options = {\n    id: body.id\n  };\n}).then(() => {\n  _ApiHelper.default.makeDeleteCall('/todos', options.id).then(({\n    status\n  }) => {\n    _ApiHelper.default.makeStatusAssertion(status, 200);\n  });\n});","err":{},"uuid":"5174b76b-3256-4e4f-8db0-50c0a4c20b8f","parentUUID":"c8a2ce2a-1285-4ce4-ab7a-e867eed99336","isHook":false,"skipped":false},{"title":"Makes a post call to create a todo record. Then, makes a get call with 'userName' parameter and validates the correct data is returned","fullTitle":"These tests are used to validate the todos API is functioning as intended Makes a post call to create a todo record. Then, makes a get call with 'userName' parameter and validates the correct data is returned","timedOut":null,"duration":119,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const createTodoBody = _ApiTestData.default.createTodoBody;\nlet options = {\n  body: createTodoBody\n}; // Makes a put call to create a data entry with known data.\n_ApiHelper.default.makePostCall('/todos', options.body).then(({\n  status,\n  body\n}) => {\n  const parameters = {\n    userName: createTodoBody.userName\n  }; // Creates a hash for the userName parameter that will be used in the next get call\n  options = {\n    url: '/todos',\n    parameters\n  };\n}).then(({\n  status,\n  body\n}) => {\n  _ApiHelper.default.makeGetCall('/todos', options.parameters).then(({\n    status,\n    body\n  }) => {\n    _ApiHelper.default.makeTodoGetAssertions(status, body, [createTodoBody]);\n  });\n  const id = body.id; // Getting the created Todo id value to perform a get call\n  options = {\n    id\n  };\n}).then(() => {\n  _ApiHelper.default.makeDeleteCall('/todos', options.id).then(({\n    status\n  }) => {\n    _ApiHelper.default.makeStatusAssertion(status, 200);\n  });\n});","err":{},"uuid":"d6e1dbc7-8173-44f6-b631-0b744cccdef7","parentUUID":"c8a2ce2a-1285-4ce4-ab7a-e867eed99336","isHook":false,"skipped":false},{"title":"Makes a post call to create a todo record. Then, makes a get call with 'userId' parameter and validates the correct data is returned","fullTitle":"These tests are used to validate the todos API is functioning as intended Makes a post call to create a todo record. Then, makes a get call with 'userId' parameter and validates the correct data is returned","timedOut":null,"duration":121,"state":"passed","speed":"fast","pass":true,"fail":false,"pending":false,"context":null,"code":"const createTodoBody = _ApiTestData.default.createTodoBody;\nlet options = {\n  body: createTodoBody\n}; // Makes a put call to create a data entry with known data.\n_ApiHelper.default.makePostCall('/todos', options.body).then(({\n  status,\n  body\n}) => {\n  const parameters = {\n    userId: createTodoBody.userId\n  }; // Creates a hash for the userId parameter that will be used in the next get call\n  options = {\n    url: '/todos',\n    parameters\n  };\n}).then(({\n  status,\n  body\n}) => {\n  _ApiHelper.default.makeGetCall('/todos', options.parameters).then(({\n    status,\n    body\n  }) => {\n    _ApiHelper.default.makeTodoGetAssertions(status, body, [createTodoBody]);\n  });\n  const id = body.id; // Getting the created Todo id value to perform a get call\n  options = {\n    id\n  };\n}).then(() => {\n  _ApiHelper.default.makeDeleteCall('/todos', options.id).then(({\n    status\n  }) => {\n    _ApiHelper.default.makeStatusAssertion(status, 200);\n  });\n});","err":{},"uuid":"922ec0ea-35ad-431b-bf31-8ae763170ef1","parentUUID":"c8a2ce2a-1285-4ce4-ab7a-e867eed99336","isHook":false,"skipped":false}],"suites":[],"passes":["576843b0-a7da-4d30-9681-58666f148816","830e97ba-def7-44c5-a289-9ff028d4e229","5174b76b-3256-4e4f-8db0-50c0a4c20b8f","d6e1dbc7-8173-44f6-b631-0b744cccdef7","922ec0ea-35ad-431b-bf31-8ae763170ef1"],"failures":[],"pending":[],"skipped":[],"duration":565,"root":false,"rootEmpty":false,"_timeout":2000}],"passes":[],"failures":[],"pending":[],"skipped":[],"duration":0,"root":true,"rootEmpty":true,"_timeout":2000}],"meta":{"mocha":{"version":"7.0.1"},"mochawesome":{"options":{"quiet":false,"reportFilename":"mochawesome","saveHtml":false,"saveJson":true,"consoleReporter":"spec","useInlineDiffs":false,"code":true},"version":"7.1.3"},"marge":{"options":{"charts":true,"reportPageTitle":"Accumulus API Project","embeddedScreenshots":true,"inlineAssets":true,"debug":true,"overwrite":false,"html":false,"json":true,"reportDir":"cypress/reports/html/.jsons"},"version":"6.2.0"}}}
Create HTML report
HTML result: ["/Users/Richard/AccumulusApiAutomationProject/cypress/reports/html/index.html",null]
HTML report successfully created!
/Users/Richard/AccumulusApiAutomationProject/cypress/reports/html/index.html
done
